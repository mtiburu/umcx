name: uMCX CI

on: [push, pull_request]

jobs:
  no_gpu_test:
    name: CPU test
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04, ubuntu-24.04]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Build binary
        run: |
          g++ --version
          cd src
          make
      - name: Run benchmarks
        run: |
          cd bin
          ./umcx cube60 || true
          ./umcx cube60b || true
      - name: Run tests
        run: |
          cd test
          ./testumcx.sh

  gcc_nvptx_gpu_offloading_test:
    name: NVIDIA GPU gcc nvptx test
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Install dependencies
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
          sudo apt-get install gcc-11 g++-11 gcc-12 g++-12 gcc-13 g++-13 gcc-11-offload-nvptx gcc-12-offload-nvptx gcc-13-offload-nvptx -y
      - name: Fix g++-13 missing libgomp file
        if: ${{ matrix.os != 'ubuntu-24.04' }}
        run: |
          sudo ln -s /usr/lib/gcc/x86_64-linux-gnu/12/accel /usr/lib/gcc/x86_64-linux-gnu/13
      - name: Build binary g++-11
        run: |
          cd src
          make clean
          make nvidia CXX=g++-11
          ../bin/umcx cube60
      - name: Run tests for g++-11
        run: |
          cd test
          ./testumcx.sh || true
      - name: Build binary g++-12
        run: |
          cd src
          make clean
          make nvidia CXX=g++-12
      - name: Run tests for g++-12
        run: |
          cd bin
          ./umcx cube60 || true
          ./umcx cube60b || true
      - name: Build binary g++-13
        run: |
          cd src
          make clean
          make nvidia CXX=g++-13
      - name: Run tests for g++-13
        run: |
          cd bin
          ./umcx cube60 || true
      - name: Installing g++-14
        if: ${{ matrix.os == 'ubuntu-24.04' }}
        run: |
          sudo apt-get install gcc-14 g++-14 gcc-14-offload-nvptx -y
      - name: Build binary g++-14
        if: ${{ matrix.os == 'ubuntu-24.04' }}
        run: |
          cd src
          make clean
          make nvidia CXX=g++-14
      - name: Run tests for g++-14
        if: ${{ matrix.os == 'ubuntu-24.04' }}
        run: |
          cd bin
          ./umcx cube60 || true

  clang_nvptx_gpu_offloading_test:
    name: NVIDIA GPU clang nvptx test
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Install dependencies
        run: |
          sudo add-apt-repository ppa:savoury1/llvm-defaults-17 -y
          sudo apt-get install clang-17 libomp-17-dev clang-tools-17 -y
      - name: Installing g++-14
        if: ${{ matrix.os == 'ubuntu-24.04' }}
        run: |
          sudo apt-get install clang-18 libomp-18-dev clang-tools-18 -y
      - name: Install CUDA
        uses: Jimver/cuda-toolkit@v0.2.19
        id: cuda-toolkit
        with:
          method: 'network'
          sub-packages: '["nvcc"]'
      - name: Build binary clang++-17
        run: |
          cd src
          make clean
          make nvidiaclang CXX=clang++-17 CXXFLAGS="--cuda-path=${{steps.cuda-toolkit.outputs.CUDA_PATH}}"
      - name: Run tests for clang++-17
        run: |
          cd bin
          LD_LIBRARY_PATH=usr/lib/llvm-17/lib/:$LD_LIBRARY_PATH ./umcx cube60 || true
      - name: Build binary clang++-18
        if: ${{ matrix.os == 'ubuntu-24.04' }}
        run: |
          cd src
          make clean
          make nvidiaclang CXX=clang++-18 CXXFLAGS="--cuda-path=${{steps.cuda-toolkit.outputs.CUDA_PATH}}"
      - name: Run tests for clang++-18
        if: ${{ matrix.os == 'ubuntu-24.04' }}
        run: |
          cd bin
          LD_LIBRARY_PATH=usr/lib/llvm-17/lib/:$LD_LIBRARY_PATH ./umcx cube60 || true
